neural {
  # Enable the neural network module
  enabled = true;
  
  # Redis backend for storing neural network data
  backend = "redis";
  servers = "127.0.0.1:6379";
  
  # Neural network configuration
  train {
    # Maximum number of training samples
    max_trains = 10000;
    
    # Learning rate for the neural network
    learning_rate = 0.01;
    
    # Number of hidden neurons
    hidden_neurons = 16;
    
    # Maximum number of training iterations
    max_iterations = 100;
    
    # Minimum number of samples required for training
    min_samples = 100;
  }
  
  # Symbol configuration for Telegram context
  symbols {
    # Neural network spam detection
    "NEURAL_SPAM" {
      weight = 3.0;
      description = "Neural network detected spam";
      group = "telegram_neural";
    }
    
    # Neural network ham detection  
    "NEURAL_HAM" {
      weight = -2.0;
      description = "Neural network detected ham";
      group = "telegram_neural";
    }
    
    # Neural network uncertain
    "NEURAL_UNCERTAIN" {
      weight = 0.5;
      description = "Neural network uncertain classification";
      group = "telegram_neural";
    }
  }
  
  # Feature extraction settings
  features {
    # Include other rule symbols as features
    include_symbols = true;
    
    # Include message metadata
    include_metadata = true;
    
    # Include text-based features
    include_text_features = true;
    
    # Feature normalization
    normalize_features = true;
  }
  
  # Training thresholds
  thresholds {
    # Minimum score for spam training
    spam_threshold = 6.0;
    
    # Maximum score for ham training  
    ham_threshold = -2.0;
    
    # Confidence threshold for classification
    confidence_threshold = 0.7;
  }
  
  # Redis keys for neural network data
  redis {
    # Key prefix for neural network data
    prefix = "neural:";
    
    # Key for storing neural network model
    model_key = "neural:model";
    
    # Key for storing training statistics
    stats_key = "neural:stats";
    
    # Key for storing feature vectors
    features_key = "neural:features";
  }
}
